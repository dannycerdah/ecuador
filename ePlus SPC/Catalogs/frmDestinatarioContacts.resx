<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Appearance13.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>